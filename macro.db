{"_id":"UNxN9xwqZmAZVj7p","name":"Export Statblock to Journal","permission":{"default":0,"Cq31UaFnLVMpY5dr":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.3sFmplIGgtI1bx0t"}},"scope":"global","command":"function replaceAll(str, find, replace) {\n\t  return str.replace(new RegExp(find, 'g'), replace);\n\t}\n\n\tfunction getOccurrence(array, value) {\n\t\tvar count = 0;\n\t\tarray.forEach((v) => (v === value && count++));\n\t\treturn count;\n\t}\n\n\tfunction onlyUnique(value, index, self) { \n\t\treturn self.indexOf(value) === index;\n\t}\n\n\t/* Builds a string holding all the selected actor's talent's names and numerical suffixes if appropriate. One-off Talents (e.g. Noble Blood) have no numerical suffix. */\n\n\tfunction outputTrappings(trappings, weapons, armour){\n\t\tconsole.log(\"--------------------------\");\n\t\tconsole.log(weapons);\n\t\tconsole.log(armour);\n\t\tvar trappingString =[];\n\t\tif (trappings==null) return [];\n\t\t\n\t\tfor (var i = 0; i < weapons.length; i++) {\n\t\t\tvar str = weapons[i].name;\n\t\t\tif (weapons[i].rangedWeaponType){\n\t\t\t\tstr += \" (\" + weapons[i].data.range.value + \") \";\n\t\t\t}\n\t\t\tstr += \" +\" + weapons[i].data.damage.value;\n\t\t\ttrappingString.push(str);\n\t\t}\n\t\t\n\t\tfor (var j=0; j<armour.length; j++){\n\t\t\tvar str = armour[j].name + \" (\";\n\t\t\tif (armour[j].data.maxAP[\"body\"]>0) str += armour[j].data.currentAP[\"body\"] + \" Body\";\n\t\t\tif (armour[j].data.maxAP[\"lArm\"]>0) str += armour[j].data.currentAP[\"lArm\"] + \" Arms\";\n\t\t\tif (armour[j].data.maxAP[\"head\"]>0) str += armour[j].data.currentAP[\"head\"] + \" Head\";\n\t\t\tif (armour[j].data.maxAP[\"lLeg\"]>0) str += armour[j].data.currentAP[\"lLeg\"] + \" Legs\";\n\t\t\tstr +=\")\";\n\t\t\ttrappingString.push(str);\n\t\t}\n\t\t\n\t\ttrappings.forEach(function (t) {\n\t\t\ttrappingString.push(t.name);\t\t\n\t\t})\n\t\treturn trappingString;\n\t\t//return trappingString.sort();\n\t}\n\n\tfunction outputTalents(talents){\n\t\tvar talentstring = [];\n\t\tif (talents!=null){\n\t\t\ttalents.forEach(function (talent) {\n\t\t\t\tif (talent.data.max.value != \"1\"){\n\t\t\t\t\tvar instances = talents.filter((i) => i.name == talent.name);\n\t\t\t\t//\tconsole.log(instances);\n\t\t\t\t\ttalentstring.push(talent.name + \" \" + instances.length);\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttalentstring.push(talent.name);\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn talentstring.filter(onlyUnique).sort();\n\t}\n\n\t/* Builds a string holding the actor's skills that they have at least 1 rank in, and the total for that skill. */\n\n\tfunction outputSkills(skills){\n\t\tvar skillstring = [];\n\t\tif (skills!=null){\t\n\t\t\tskills.forEach(function (skill) {\n\t\t\t\tconsole.log(skill);\n\t\t\t\tif (skill.data.advances.value != \"0\"){\n\t\t\t\t\tskillstring.push(skill.name + \" \" + skill.data.total.value);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn skillstring.sort();\n\t}\n\n\t/* Output monster/NPC traits. */\n\n\tfunction outputTraits(traits){\n\t\tvar traitsstring = \"\";\n\t\tif (traits!=null){\t\n\t\t\ttraits.forEach(function (trait) {\n\t\t\t\tif (traitsstring != \"\") traitsstring +=\", \";\n\t\t\t\ttraitsstring+=trait.name;\t\t\t\n\t\t\t})\n\t\t}\n\t\treturn traitsstring;\t\n\t}\n\n\t/* Output spells */\n\tfunction outputSpells(spells){\n\t\tvar spellString = [];\n\t\tfor (var i = 0; i < spells.length; i++) {\n\t\t\tconsole.log(\"spell \" + i);\n\t\t\tspellString.push(\"<em>\" + spells[i].name + \"</em>\");\t\t\t\n\t\t}\n\t\treturn spellString.sort();\n\t}\n\n\t/* Output spells */\n\tfunction convertToStats(actor){\n\t\t\n\t\tvar prep = actor.prepare();\n\t\tconsole.log(\"------------\");\n\t\t\n\t\t\n\t\tvar weapons = prep.weapons;\n\t\tvar armour = prep.armour;\n\t\t\n\t\tconsole.log(weapons);\n\t\tconsole.log(\"------------\");\n\t\t\n\t\tvar char1=\"<td align=\\\"center\\\">\";\n\t\tvar char2=\"</td>\";\n\t\tvar output;\n\t\t\n\t\toutput = \"<h1>\" + actor.name;\n\t\tvar st = actor.data.data.details.status.value;\n\n\t\tif (st !=null && st!=\"\")\n\t\t\toutput += \" (\" + st + \")\";\n\t\tconsole.log(st);\n\t\toutput += \"</h1>\";\t\t\n\t\toutput += \"<table border=\\\"1\\\" class=\\\"exportOutput\\\"><tr><th style=\\\"width:8%;\\\">M</th><th style=\\\"width:8%;\\\">WS</th><th style=\\\"width:8%;\\\">BS</th><th style=\\\"width:8%;\\\">S</th><th style=\\\"width:8%;\\\">T</th><th style=\\\"width:8%;\\\">I</th><th style=\\\"width:8%;\\\">Ag</th><th style=\\\"width:8%;\\\">Dex</th><th style=\\\"width:8%;\\\">Int</th><th style=\\\"width:8%;\\\">WP</th><th style=\\\"width:8%;\\\">Fel</th><th style=\\\"width:8%;\\\">W</th></tr><tr>\";\n\t\t\n\t\toutput += char1 + prep.data.details.move.value + char2;\n\t\toutput += char1 + prep.data.characteristics.ws.value + char2;\n\t\toutput += char1 + prep.data.characteristics.bs.value + char2;\n\t\toutput += char1 + prep.data.characteristics.s.value + char2;\n\t\toutput += char1 + prep.data.characteristics.t.value + char2;\n\t\toutput += char1 + prep.data.characteristics.i.value + char2;\n\t\toutput += char1 + prep.data.characteristics.ag.value + char2;\n\t\toutput += char1 + prep.data.characteristics.dex.value + char2;\n\t\toutput += char1 + prep.data.characteristics.int.value + char2;\n\t\toutput += char1 + prep.data.characteristics.wp.value + char2;\n\t\toutput += char1 + prep.data.characteristics.fel.value + char2;\n\t\toutput += char1 + prep.data.status.wounds.value + char2;\n\n\n\t\toutput +=\"</tr></table>\";\n\t\t\n\t\tconst skills = prep.basicSkills.concat(prep.advancedOrGroupedSkills);\n\t\tconst talents = actor.data.items.filter((i) => i.type === \"talent\");\n\t\tconst traits = prep.traits;\n\t\tconst trappings = actor.data.items.filter((i) => i.type === \"trapping\" || i.type === \"container\" || i.type === \"ammunition\" );\n\t\tconst spells = prep.grimoire;\n\t\t\n\t\t\n\t\tconsole.log(\"##################\");\n\t\tconsole.log(spells);\n\t\t\n\t\t\n\t\tvar skillsString = outputSkills(skills);\n\t\tvar talentsString = outputTalents(talents);\n\t\tvar traitsString = outputTraits(traits);\n\t\tvar trappingString = outputTrappings(trappings, weapons, armour);\n\t\tvar spellString = outputSpells(spells);\n\t\t\n\t\tif (skillsString!=null && skillsString!=\"\")\n\t\t\toutput += \"<p><strong>Skills:</strong> \" + replaceAll(skillsString.toString(),\",\",\", \") + \"<p>\";\n\t\tif (talentsString!=null && talentsString!=\"\") \n\t\t\toutput += \"<p><strong>Talents:</strong> \" +  replaceAll(talentsString.toString(),\",\",\", \") + \"<p>\";\n\t\tif (traitsString!=null && traitsString!=\"\")\n\t\t\toutput += \"<p><strong>Traits:</strong> \" + traitsString + \"<p>\";\n\t\tif (trappingString!=null && trappingString!=\"\")\n\t\t\toutput += \"<p><strong>Trappings:</strong> \" + replaceAll(trappingString.toString(),\",\",\", \") + \"<p>\";\n\t\tif (spellString!=null && spellString!=\"\")\n\t\t\toutput += \"<p><strong>Spells:</strong> \" + replaceAll(spellString.toString(),\",\",\", \") + \"<p>\";\n\t\t\n\t\t\n\t\tlet chatData = {\n\t\t\tuser : game.user._id,\n\t\t\tcontent : output\n\t\t};\n\t\tChatMessage.create(chatData,{});\n\t\treturn output;\n\t}\n\t\n\t/* Given an actor make a JournalEntry for their stats. */\n\t\n\tfunction doConversion(exportActor){\n\t\tvar filename = exportActor.name + \" export\";\n\t\tvar existing = game.journal.entities.find(e => e.name == filename);\n\t\tif (existing != null){\n\t\t\texisting.delete();\n\t\t}\t\t\n\t\tlet content = convertToStats(exportActor);\n\t\tvar j = JournalEntry.create({\n\t\t\tname : filename,\n\t\t\tcontent : `${content}`\n\t\t});\n\t\tui.notifications.notify(\"Actor Converted.\");\n\t\texisting = game.journal.entities.find(e => e.name == filename);\t\n\t\texisting.sheet.render(true);\n\t}\n\n\t/* Main code */\n\tvar actorToConvert = null;\n\tvar selectedToken = canvas.tokens.controlled[0];\n\tif (selectedToken != null || canvas.tokens.controlled.length > 1){\n\t\tactorToConvert = selectedToken.actor;\n\t\tdoConversion(actorToConvert);\n\t\treturn;\n\t}\n\tvar output = \"<p>Please select a statblock.</p><form><div class=\\\"form-group\\\"><select id=\\\"export-choice\\\" name=\\\"selectedActor\\\">\";\n\tlet options = Array.from(game.actors);\n\tfor (var i = 0; i < options.length; i++) {\n\t\tvar currActor = options[i];\n\t\toutput += \"<option value=\\\"\" + i + \"\\\">\" + currActor.name + \"</option>\";\n\t}\n\toutput +=\"</select></form>\";\n\tvar exporting = false;\n\tlet d = new Dialog({\n\t title: \"Export WFRP 4E Statblock\",\n\t content: output,\n\t buttons: {\n\t  one: {\n\t   icon: '<i class=\"fas fa-check\"></i>',\n\t   label: \"Export to Journal\",\n\t   callback: () => exporting = true\n\t  }\n\t },\n\t default: \"two\",\n\t render: html => console.log(\"Register interactivity in the rendered dialog\"),\n\t close: html => {\n\t\tif (exporting){\n\t\t\tvar actorNumber = html.find('[name=selectedActor]')[0].value;\n\t\t\tdoConversion(options[actorNumber]);\n\t\t}\n\t }\n\t});\n\td.render(true);","author":"Cq31UaFnLVMpY5dr","img":"modules/wfrp4e-statblockexporter/icons/quill.svg","actorIds":[]}
{"_id":"UNxN9xwqZmAZVj7p","name":"Export Statblock to Journal","permission":{"default":0,"Cq31UaFnLVMpY5dr":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.3sFmplIGgtI1bx0t"}},"scope":"global","command":"function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nfunction getOccurrence(array, value) {\n    var count = 0;\n    array.forEach((v) => (v === value && count++));\n    return count;\n}\n\nfunction onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\n/* Builds a string holding all the selected actor's talent's names and numerical suffixes if appropriate. One-off Talents (e.g. Noble Blood) have no numerical suffix. */\n\nfunction outputTrappings(trappings, weapons, armour, money) {\n    var trappingString = [];\n    if (trappings == null) return [];\n\n\n\t// weapons\n    for (var i = 0; i < weapons.length; i++) {\n        var str = weapons[i].name;\n        if (weapons[i].rangedWeaponType) {\n            str += \" (\" + weapons[i].data.range.value + \")\";\n        }\n        if (weapons[i].damage >= 0){\n            str += \" +\" + weapons[i].damage;\n        }\n        else {\n            str += \" -\" + weapons[i].damage;\n        }\n        trappingString.push(str);\n    }\n\n\t// armour\n\n    for (var j = 0; j < armour.length; j++) {\n        var areaCnt=0;\n        var str = armour[j].name + \" (\";\n        if (armour[j].data.maxAP[\"body\"] > 0){\n\t\t\tstr += \"Body \" + armour[j].data.currentAP[\"body\"];\n\t\t\tareaCnt++;\n\t\t}\n        if (armour[j].data.maxAP[\"lArm\"] > 0){\n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Arms \" + armour[j].data.currentAP[\"lArm\"];\n\t\t\tareaCnt++;\n\t\t}\n\t\t\t\t\n        if (armour[j].data.maxAP[\"head\"] > 0){\n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Head \" + armour[j].data.currentAP[\"head\"];\n\t\t\tareaCnt++;\n\t\t}\n        if (armour[j].data.maxAP[\"lLeg\"] > 0){ \n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Legs \" + armour[j].data.currentAP[\"lLeg\"];\n\t\t}\n        str += \")\";\n        trappingString.push(str);\n    }\n\n\t// others\n\n    trappings.forEach(function(t) {\n        trappingString.push(t.name);\n    })\n\n\t\n\t// money\n\tvar gc, ss, bp, moneyString;\n\t\n\tfor (var i = 0; i < money.length; i++) {\n\t\tif (money[i].name == \"Silver Shilling\"){\n\t\t\tss = money[i].data.quantity.value;\n\t\t}\n\t\tif (money[i].name == \"Gold Crown\"){\n\t\t\tgc = money[i].data.quantity.value;\n\t\t}\n\t\tif (money[i].name == \"Brass Penny\"){\n\t\t\tbp = money[i].data.quantity.value;\n\t\t}\t\t\n\t}\n\tmoneyString=\"\";\n\tif (gc>0) {\n\t\tmoneyString += gc + \" gc\";\n\t}\n\tif (ss>0) {\n\t\tif (moneyString != \"\") moneyString += \" \";\n\t\tmoneyString += ss + \" ss\";\n\t}\n\tif (bp>0) {\n\t\tif (moneyString != \"\") moneyString += \" \";\n\t\tmoneyString += bp + \" bp\";\n\t}\t\n\tif (moneyString != \"\") trappingString.push(moneyString);\n\tconsole.log(\"######################\");\n\tconsole.log(\"\" + gc + \" \" + ss + \" \" + bp);\n\tconsole.log(moneyString);\n    return trappingString;\t\n\t\n    //return trappingString.sort();\n}\n\nfunction outputTalents(talents) {\n    var talentstring = [];\n    if (talents != null) {\n        talents.forEach(function(talent) {\n            if (talent.data.max.value != \"1\") {\n                var instances = talents.filter((i) => i.name == talent.name);\n                //\t// console.log(instances);\n                talentstring.push(talent.name + \" \" + instances.length);\n            } else {\n                talentstring.push(talent.name);\n            }\n        })\n    }\n    return talentstring.filter(onlyUnique).sort();\n}\n\n/* Builds a string holding the actor's skills that they have at least 1 rank in, and the total for that skill. */\n\nfunction outputSkills(skills) {\n    var skillstring = [];\n    if (skills != null) {\n        skills.forEach(function(skill) {\n            // console.log(skill);\n            if (skill.data.advances.value != \"0\") {\n                skillstring.push(skill.name + \" \" + skill.data.total.value);\n            }\n        })\n    }\n    return skillstring.sort();\n}\n\n/* Output monster/NPC traits. */\n\nfunction outputTraits(traits) {\n    var traitsstring = \"\";\n    if (traits != null) {\n        traits.forEach(function(trait) {\n            if (traitsstring != \"\") traitsstring += \", \";\n            traitsstring += trait.name;\n        })\n    }\n    return traitsstring;\n}\n\n/* Output spells */\nfunction outputSpells(spells) {\n    var spellString = [];\n    for (var i = 0; i < spells.length; i++) {\n        // console.log(\"spell \" + i);\n        spellString.push(\"<em>\" + spells[i].name + \"</em>\");\n    }\n    return spellString.sort();\n}\n\n/* Output spells */\nfunction convertToStats(actor) {\n\n    var prep = actor.prepare();\n    // console.log(\"------------\");\n\n\n    var weapons = prep.weapons;\n    var armour = prep.armour;\n\n    // console.log(weapons);\n    // console.log(\"------------\");\n\n    var char1 = \"<td align=\\\"center\\\">\";\n    var char2 = \"</td>\";\n    var output;\n\n    output = \"<h1>\" + actor.name;\n    var st = actor.data.data.details.status.value;\n\n    if (st != null && st != \"\")\n        output += \" (\" + st + \")\";\n    // console.log(st);\n    output += \"</h1>\";\n    output += \"<table border=\\\"1\\\" class=\\\"exportOutput\\\"><tr><th style=\\\"width:8%;\\\">M</th><th style=\\\"width:8%;\\\">WS</th><th style=\\\"width:8%;\\\">BS</th><th style=\\\"width:8%;\\\">S</th><th style=\\\"width:8%;\\\">T</th><th style=\\\"width:8%;\\\">I</th><th style=\\\"width:8%;\\\">Ag</th><th style=\\\"width:8%;\\\">Dex</th><th style=\\\"width:8%;\\\">Int</th><th style=\\\"width:8%;\\\">WP</th><th style=\\\"width:8%;\\\">Fel</th><th style=\\\"width:8%;\\\">W</th></tr><tr>\";\n\n    output += char1 + prep.data.details.move.value + char2;\n    output += char1 + prep.data.characteristics.ws.value + char2;\n    output += char1 + prep.data.characteristics.bs.value + char2;\n    output += char1 + prep.data.characteristics.s.value + char2;\n    output += char1 + prep.data.characteristics.t.value + char2;\n    output += char1 + prep.data.characteristics.i.value + char2;\n    output += char1 + prep.data.characteristics.ag.value + char2;\n    output += char1 + prep.data.characteristics.dex.value + char2;\n    output += char1 + prep.data.characteristics.int.value + char2;\n    output += char1 + prep.data.characteristics.wp.value + char2;\n    output += char1 + prep.data.characteristics.fel.value + char2;\n    output += char1 + prep.data.status.wounds.value + char2;\n\n\n    output += \"</tr></table>\";\n\n    const skills = prep.basicSkills.concat(prep.advancedOrGroupedSkills);\n    const talents = actor.data.items.filter((i) => i.type === \"talent\");\n    const traits = prep.traits;\n    const trappings = actor.data.items.filter((i) => i.type === \"trapping\" || i.type === \"container\" || i.type === \"ammunition\");\n\tconst spells = prep.petty.concat(prep.grimoire.concat(prep.miracles.concat(prep.blessings)));\n\tconst money = prep.money.coins;\n\n\n\n    // console.log(\"##################\");\n    // console.log(spells);\n    // console.log(money);\n\n\n    var skillsString = outputSkills(skills);\n    var talentsString = outputTalents(talents);\n    var traitsString = outputTraits(traits);\n    var trappingString = outputTrappings(trappings, weapons, armour, money);\n    var spellString = outputSpells(spells);\n\n    if (skillsString != null && skillsString != \"\")\n        output += \"<p><strong>Skills:</strong> \" + replaceAll(skillsString.toString(), \",\", \", \") + \"<p>\";\n    if (talentsString != null && talentsString != \"\")\n        output += \"<p><strong>Talents:</strong> \" + replaceAll(talentsString.toString(), \",\", \", \") + \"<p>\";\n    if (traitsString != null && traitsString != \"\")\n        output += \"<p><strong>Traits:</strong> \" + traitsString + \"<p>\";\n    if (trappingString != null && trappingString != \"\")\n        output += \"<p><strong>Trappings:</strong> \" + replaceAll(trappingString.toString(), \",\", \", \") + \"</p>\";\n    if (spellString != null && spellString != \"\")\n        output += \"<p><strong>Spells:</strong> \" + replaceAll(spellString.toString(), \",\", \", \") + \"<p>\";\n\n\n    let chatData = {\n        user: game.user._id,\n        content: output\n    };\n    return output;\n}\n\n/* Given an actor make a JournalEntry for their stats. */\n\nfunction doConversion(exportActor) {\n    var filename = exportActor.name + \" export\";\n    var existing = game.journal.entities.find(e => e.name == filename);\n    if (existing != null) {\n        existing.delete();\n    }\n    let content = convertToStats(exportActor);\n    var j = JournalEntry.create({\n        name: filename,\n        content: `${content}`\n    });\n    ui.notifications.notify(\"Actor Converted Successfully. Check Journals for \" + filename);\n}\n\n/* Main code */\nvar actorToConvert = null;\nvar selectedToken = canvas.tokens.controlled[0];\nif (selectedToken != null || canvas.tokens.controlled.length > 1) {\n    actorToConvert = selectedToken.actor;\n    doConversion(actorToConvert);\n} else {\n    var output = \"<p>Please select a statblock.</p><form><div class=\\\"form-group\\\"><select id=\\\"export-choice\\\" name=\\\"selectedActor\\\">\";\n    let options = Array.from(game.actors);\n    for (var i = 0; i < options.length; i++) {\n        var currActor = options[i];\n        output += \"<option value=\\\"\" + i + \"\\\">\" + currActor.name + \"</option>\";\n    }\n    output += \"</select></form>\";\n    var exporting = false;\n    let d = new Dialog({\n        title: \"Export WFRP 4E Statblock\",\n        content: output,\n        buttons: {\n            one: {\n                icon: '<i class=\"fas fa-check\"></i>',\n                label: \"Export to Journal\",\n                callback: () => exporting = true\n            }\n        },\n        default: \"two\",\n        render: html => console.log(\"Register interactivity in the rendered dialog\"),\n        close: html => {\n            if (exporting) {\n                var actorNumber = html.find('[name=selectedActor]')[0].value;\n                doConversion(options[actorNumber]);\n            }\n        }\n    });\n    d.render(true);\n}","author":"Cq31UaFnLVMpY5dr","img":"modules/wfrp4e-statblockexporter/icons/quill.svg","actorIds":[]}
{"_id":"UNxN9xwqZmAZVj7p","name":"Export Statblock to Journal","permission":{"default":0,"Cq31UaFnLVMpY5dr":3},"type":"script","flags":{"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.3sFmplIGgtI1bx0t"}},"scope":"global","command":"function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nfunction getOccurrence(array, value) {\n    var count = 0;\n    array.forEach((v) => (v === value && count++));\n    return count;\n}\n\nfunction onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n}\n\n/* Builds a string holding all the selected actor's talent's names and numerical suffixes if appropriate. One-off Talents (e.g. Noble Blood) have no numerical suffix. */\n\nfunction outputTrappings(trappings, weapons, armour, money) {\n    var trappingString = [];\n    if (trappings == null) return [];\n\n\n\t// weapons\n    for (var i = 0; i < weapons.length; i++) {\n        var str = weapons[i].name;\n        if (weapons[i].rangedWeaponType) {\n            str += \" (\" + weapons[i].data.range.value + \")\";\n        }\n        if (weapons[i].damage >= 0){\n            str += \" +\" + weapons[i].damage;\n        }\n        else {\n            str += \" -\" + weapons[i].damage;\n        }\n        trappingString.push(str);\n    }\n\n\t// armour\n\n    for (var j = 0; j < armour.length; j++) {\n        var areaCnt=0;\n        var str = armour[j].name + \" (\";\n        if (armour[j].data.maxAP[\"body\"] > 0){\n\t\t\tstr += \"Body \" + armour[j].data.currentAP[\"body\"];\n\t\t\tareaCnt++;\n\t\t}\n        if (armour[j].data.maxAP[\"lArm\"] > 0){\n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Arms \" + armour[j].data.currentAP[\"lArm\"];\n\t\t\tareaCnt++;\n\t\t}\n\t\t\t\t\n        if (armour[j].data.maxAP[\"head\"] > 0){\n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Head \" + armour[j].data.currentAP[\"head\"];\n\t\t\tareaCnt++;\n\t\t}\n        if (armour[j].data.maxAP[\"lLeg\"] > 0){ \n\t\t\tif (areaCnt>0) str += \" \";\n\t\t\tstr += \"Legs \" + armour[j].data.currentAP[\"lLeg\"];\n\t\t}\n        str += \")\";\n        trappingString.push(str);\n    }\n\n\t// others\n\n    trappings.forEach(function(t) {\n        trappingString.push(t.name);\n    })\n\n\t\n\t// money\n\tvar gc, ss, bp, moneyString;\n\t\n\tfor (var i = 0; i < money.length; i++) {\n\t\tif (money[i].name == \"Silver Shilling\"){\n\t\t\tss = money[i].data.quantity.value;\n\t\t}\n\t\tif (money[i].name == \"Gold Crown\"){\n\t\t\tgc = money[i].data.quantity.value;\n\t\t}\n\t\tif (money[i].name == \"Brass Penny\"){\n\t\t\tbp = money[i].data.quantity.value;\n\t\t}\t\t\n\t}\n\tmoneyString=\"\";\n\tif (gc>0) {\n\t\tmoneyString += gc + \" gc\";\n\t}\n\tif (ss>0) {\n\t\tif (moneyString != \"\") moneyString += \" \";\n\t\tmoneyString += ss + \" ss\";\n\t}\n\tif (bp>0) {\n\t\tif (moneyString != \"\") moneyString += \" \";\n\t\tmoneyString += bp + \" bp\";\n\t}\t\n\tif (moneyString != \"\") trappingString.push(moneyString);\n\tconsole.log(\"######################\");\n\tconsole.log(\"\" + gc + \" \" + ss + \" \" + bp);\n\tconsole.log(moneyString);\n    return trappingString;\t\n\t\n    //return trappingString.sort();\n}\n\nfunction outputTalents(talents) {\n    var talentstring = [];\n    if (talents != null) {\n        talents.forEach(function(talent) {\n            if (talent.data.max.value != \"1\") {\n                var instances = talents.filter((i) => i.name == talent.name);\n                //\t// console.log(instances);\n                talentstring.push(talent.name + \" \" + instances.length);\n            } else {\n                talentstring.push(talent.name);\n            }\n        })\n    }\n    return talentstring.filter(onlyUnique).sort();\n}\n\n/* Builds a string holding the actor's skills that they have at least 1 rank in, and the total for that skill. */\n\nfunction outputSkills(skills) {\n    var skillstring = [];\n    if (skills != null) {\n        skills.forEach(function(skill) {\n            // console.log(skill);\n            if (skill.data.advances.value != \"0\") {\n                skillstring.push(skill.name + \" \" + skill.data.total.value);\n            }\n        })\n    }\n    return skillstring.sort();\n}\n\n/* Output monster/NPC traits. */\n\nfunction outputTraits(traits) {\n    var traitsstring = \"\";\n    if (traits != null) {\n        traits.forEach(function(trait) {\n            if (traitsstring != \"\") traitsstring += \", \";\n            traitsstring += trait.name;\n        })\n    }\n    return traitsstring;\n}\n\n/* Output spells */\nfunction outputSpells(spells) {\n    var spellString = [];\n    for (var i = 0; i < spells.length; i++) {\n        // console.log(\"spell \" + i);\n        spellString.push(\"<em>\" + spells[i].name + \"</em>\");\n    }\n    return spellString.sort();\n}\n\n/* Output spells */\nfunction convertToStats(actor) {\n\n    var prep = actor.prepare();\n    // console.log(\"------------\");\n\n\n    var weapons = prep.weapons;\n    var armour = prep.armour;\n\n    // console.log(weapons);\n    // console.log(\"------------\");\n\n    var char1 = \"<td align=\\\"center\\\">\";\n    var char2 = \"</td>\";\n    var output;\n\n    output = \"<h1>\" + actor.name;\n    var st = actor.data.data.details.status.value;\n\n    if (st != null && st != \"\")\n        output += \" (\" + st + \")\";\n    // console.log(st);\n    output += \"</h1>\";\n    output += \"<table border=\\\"1\\\" class=\\\"exportOutput\\\"><tr><th style=\\\"width:8%;\\\">M</th><th style=\\\"width:8%;\\\">WS</th><th style=\\\"width:8%;\\\">BS</th><th style=\\\"width:8%;\\\">S</th><th style=\\\"width:8%;\\\">T</th><th style=\\\"width:8%;\\\">I</th><th style=\\\"width:8%;\\\">Ag</th><th style=\\\"width:8%;\\\">Dex</th><th style=\\\"width:8%;\\\">Int</th><th style=\\\"width:8%;\\\">WP</th><th style=\\\"width:8%;\\\">Fel</th><th style=\\\"width:8%;\\\">W</th></tr><tr>\";\n\n    output += char1 + prep.data.details.move.value + char2;\n    output += char1 + prep.data.characteristics.ws.value + char2;\n    output += char1 + prep.data.characteristics.bs.value + char2;\n    output += char1 + prep.data.characteristics.s.value + char2;\n    output += char1 + prep.data.characteristics.t.value + char2;\n    output += char1 + prep.data.characteristics.i.value + char2;\n    output += char1 + prep.data.characteristics.ag.value + char2;\n    output += char1 + prep.data.characteristics.dex.value + char2;\n    output += char1 + prep.data.characteristics.int.value + char2;\n    output += char1 + prep.data.characteristics.wp.value + char2;\n    output += char1 + prep.data.characteristics.fel.value + char2;\n    output += char1 + prep.data.status.wounds.value + char2;\n\n\n    output += \"</tr></table>\";\n\n    const skills = prep.basicSkills.concat(prep.advancedOrGroupedSkills);\n    const talents = actor.data.items.filter((i) => i.type === \"talent\");\n    const traits = prep.traits;\n    const trappings = actor.data.items.filter((i) => i.type === \"trapping\" || i.type === \"container\" || i.type === \"ammunition\");\n\tconst spells = prep.petty.concat(prep.grimoire.concat(prep.miracles.concat(prep.blessings)));\n\tconst money = prep.money.coins;\n\n\n\n    // console.log(\"##################\");\n    // console.log(spells);\n    // console.log(money);\n\n\n    var skillsString = outputSkills(skills);\n    var talentsString = outputTalents(talents);\n    var traitsString = outputTraits(traits);\n    var trappingString = outputTrappings(trappings, weapons, armour, money);\n    var spellString = outputSpells(spells);\n\n    if (skillsString != null && skillsString != \"\")\n        output += \"<p><strong>Skills:</strong> \" + replaceAll(skillsString.toString(), \",\", \", \") + \"<p>\";\n    if (talentsString != null && talentsString != \"\")\n        output += \"<p><strong>Talents:</strong> \" + replaceAll(talentsString.toString(), \",\", \", \") + \"<p>\";\n    if (traitsString != null && traitsString != \"\")\n        output += \"<p><strong>Traits:</strong> \" + traitsString + \"<p>\";\n    if (trappingString != null && trappingString != \"\")\n        output += \"<p><strong>Trappings:</strong> \" + replaceAll(trappingString.toString(), \",\", \", \") + \"</p>\";\n    if (spellString != null && spellString != \"\")\n        output += \"<p><strong>Spells:</strong> \" + replaceAll(spellString.toString(), \",\", \", \") + \"<p>\";\n\n\n    let chatData = {\n        user: game.user._id,\n        content: output\n    };\n    return output;\n}\n\n/* Given an actor make a JournalEntry for their stats. */\n\nfunction doConversion(exportActor) {\n    var filename = exportActor.name + \" export\";\n    var existing = game.journal.entities.find(e => e.name == filename);\n    if (existing != null) {\n        existing.delete();\n    }\n    let content = convertToStats(exportActor);\n    var j = JournalEntry.create({\n        name: filename,\n        content: `${content}`\n    });\n    ui.notifications.notify(\"Actor Converted Successfully. Check Journals for \" + filename);\n}\n\n/* Main code */\nvar actorToConvert = null;\nvar selectedToken = canvas.tokens.controlled[0];\nif (selectedToken != null || canvas.tokens.controlled.length > 1) {\n    actorToConvert = selectedToken.actor;\n    doConversion(actorToConvert);\n} else {\n    var output = \"<p>Please select a statblock.</p><form><div class=\\\"form-group\\\"><select id=\\\"export-choice\\\" name=\\\"selectedActor\\\">\";\n    let options = Array.from(game.actors);\n    for (var i = 0; i < options.length; i++) {\n        var currActor = options[i];\n        output += \"<option value=\\\"\" + i + \"\\\">\" + currActor.name + \"</option>\";\n    }\n    output += \"</select></form>\";\n    var exporting = false;\n    let d = new Dialog({\n        title: \"Export WFRP 4E Statblock\",\n        content: output,\n        buttons: {\n            one: {\n                icon: '<i class=\"fas fa-check\"></i>',\n                label: \"Export to Journal\",\n                callback: () => exporting = true\n            }\n        },\n        default: \"two\",\n        render: html => console.log(\"Register interactivity in the rendered dialog\"),\n        close: html => {\n            if (exporting) {\n                var actorNumber = html.find('[name=selectedActor]')[0].value;\n                doConversion(options[actorNumber]);\n            }\n        }\n    });\n    d.render(true);\n}","author":"Cq31UaFnLVMpY5dr","img":"modules/wfrp4e-statblockexporter/icons/quill.svg","actorIds":[]}
